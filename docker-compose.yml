# docker-compose.yml (Local)

services:

  backend:
    container_name: geobrand-api
    build:
      context: ./api
      dockerfile: Dockerfile
    working_dir: /var/www/api
    env_file:
      - ./api/.env
    depends_on:
      - db 
    networks:
      - geo-brand-net

  nginx:
    container_name: geobrand-nginx
    image: nginx:alpine
    ports:
      - "5500:80"
    volumes:
      - ./web:/var/www/web
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - geo-brand-net

  db:
    container_name: geobrand-db
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: geo-brand
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ROOT_HOST: "%"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - 3306:3306
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - geo-brand-net

volumes:
  db-data:

networks:
  geo-brand-net:
    driver: bridge